From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: MrPowerGamerBR <git@mrpowergamerbr.com>
Date: Mon, 10 Jun 2024 13:06:30 -0300
Subject: [PATCH] Helpful NMS packet changes

Some nice changes to the packet internals to make packet sending and manipulation easier for us to avoid Reflection and JVM internals (ooo theUnsafe spooky) usage

diff --git a/src/main/java/net/minecraft/network/protocol/game/ClientboundAddEntityPacket.java b/src/main/java/net/minecraft/network/protocol/game/ClientboundAddEntityPacket.java
index ee43eb8887835fbd016d28f91b2239dfeb25508e..e945e0752b41e10d16d8c766a2f919767b7b0b82 100644
--- a/src/main/java/net/minecraft/network/protocol/game/ClientboundAddEntityPacket.java
+++ b/src/main/java/net/minecraft/network/protocol/game/ClientboundAddEntityPacket.java
@@ -21,7 +21,7 @@ public class ClientboundAddEntityPacket implements Packet<ClientGamePacketListen
     private static final double LIMIT = 3.9;
     private final int id;
     private final UUID uuid;
-    private final EntityType<?> type;
+    public EntityType<?> type; // SparklyPaper - Helpful NMS packet changes: remove final and make public
     private final double x;
     private final double y;
     private final double z;
@@ -177,6 +177,32 @@ public class ClientboundAddEntityPacket implements Packet<ClientGamePacketListen
         return (float)(this.yHeadRot * 360) / 256.0F;
     }
 
+    // SparklyPaper - Helpful NMS packet changes: expose raw rotational fields
+    public int getXaRaw() {
+        return this.xa;
+    }
+
+    public int getYaRaw() {
+        return this.ya;
+    }
+
+    public int getZaRaw() {
+        return this.za;
+    }
+
+    public byte getXRotRaw() {
+        return this.xRot;
+    }
+
+    public byte getYRotRaw() {
+        return this.yRot;
+    }
+
+    public byte getYHeadRotRaw() {
+        return this.yHeadRot;
+    }
+    // SparklyPaper end
+
     public int getData() {
         return this.data;
     }
diff --git a/src/main/java/net/minecraft/network/protocol/game/ClientboundBlockUpdatePacket.java b/src/main/java/net/minecraft/network/protocol/game/ClientboundBlockUpdatePacket.java
index 1e8fad30c5f5be48501c7d8584caedcdc232f6c8..772848cf83a92a8ef8d734949b21f2f1d13e3fcb 100644
--- a/src/main/java/net/minecraft/network/protocol/game/ClientboundBlockUpdatePacket.java
+++ b/src/main/java/net/minecraft/network/protocol/game/ClientboundBlockUpdatePacket.java
@@ -19,7 +19,7 @@ public class ClientboundBlockUpdatePacket implements Packet<ClientGamePacketList
         ClientboundBlockUpdatePacket::new
     );
     private final BlockPos pos;
-    public final BlockState blockState;
+    public BlockState blockState; // SparklyPaper - Helpful NMS packet changes: remove final
 
     public ClientboundBlockUpdatePacket(BlockPos pos, BlockState state) {
         this.pos = pos;
diff --git a/src/main/java/net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData.java b/src/main/java/net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData.java
index 0a8d07bf68b0ceabd13c70196d357fce79dcc2c3..0b5abaf11508fa6c6809b73f53d6854aa3b3247c 100644
--- a/src/main/java/net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData.java
+++ b/src/main/java/net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData.java
@@ -25,7 +25,7 @@ import net.minecraft.world.level.levelgen.Heightmap;
 public class ClientboundLevelChunkPacketData {
     private static final int TWO_MEGABYTES = 2097152;
     private final CompoundTag heightmaps;
-    private final byte[] buffer;
+    public byte[] buffer; // SparklyPaper - Helpful NMS packet changes: remove final and make public
     private final List<ClientboundLevelChunkPacketData.BlockEntityInfo> blockEntitiesData;
     // Paper start - Handle oversized block entities in chunks
     private final java.util.List<net.minecraft.network.protocol.Packet<?>> extraPackets = new java.util.ArrayList<>();
diff --git a/src/main/java/net/minecraft/network/protocol/game/ClientboundRotateHeadPacket.java b/src/main/java/net/minecraft/network/protocol/game/ClientboundRotateHeadPacket.java
index 9a18277754fc1657e862b2ff4c077a54a4e24977..81bce96598dcfcc919e435ce47b9dc9c195c32fa 100644
--- a/src/main/java/net/minecraft/network/protocol/game/ClientboundRotateHeadPacket.java
+++ b/src/main/java/net/minecraft/network/protocol/game/ClientboundRotateHeadPacket.java
@@ -19,6 +19,13 @@ public class ClientboundRotateHeadPacket implements Packet<ClientGamePacketListe
         this.yHeadRot = headYaw;
     }
 
+    // SparklyPaper start - Helpful NMS packet changes: add entity ID constructor
+    public ClientboundRotateHeadPacket(int entityId, byte headYaw) {
+        this.entityId = entityId;
+        this.yHeadRot = headYaw;
+    }
+    // SparklyPaper end
+
     private ClientboundRotateHeadPacket(FriendlyByteBuf buf) {
         this.entityId = buf.readVarInt();
         this.yHeadRot = buf.readByte();
diff --git a/src/main/java/net/minecraft/network/protocol/game/ClientboundSectionBlocksUpdatePacket.java b/src/main/java/net/minecraft/network/protocol/game/ClientboundSectionBlocksUpdatePacket.java
index 1a37654aff9a9c86c9f7af10a1cf721371f0c5ec..e69ff4e6bb3919340a93ed4c68bdd6c4778669a9 100644
--- a/src/main/java/net/minecraft/network/protocol/game/ClientboundSectionBlocksUpdatePacket.java
+++ b/src/main/java/net/minecraft/network/protocol/game/ClientboundSectionBlocksUpdatePacket.java
@@ -17,9 +17,9 @@ public class ClientboundSectionBlocksUpdatePacket implements Packet<ClientGamePa
 
     public static final StreamCodec<FriendlyByteBuf, ClientboundSectionBlocksUpdatePacket> STREAM_CODEC = Packet.codec(ClientboundSectionBlocksUpdatePacket::write, ClientboundSectionBlocksUpdatePacket::new);
     private static final int POS_IN_SECTION_BITS = 12;
-    private final SectionPos sectionPos;
-    private final short[] positions;
-    private final BlockState[] states;
+    public SectionPos sectionPos; // SparklyPaper - Helpful NMS packet changes: remove final and make public
+    public short[] positions; // SparklyPaper - Helpful NMS packet changes: remove final and make public
+    public BlockState[] states; // SparklyPaper - Helpful NMS packet changes: remove final and make public
 
     public ClientboundSectionBlocksUpdatePacket(SectionPos sectionPos, ShortSet positions, LevelChunkSection section) {
         this.sectionPos = sectionPos;
